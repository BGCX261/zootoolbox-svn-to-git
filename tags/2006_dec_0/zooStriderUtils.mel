zooArrays_str;
zooFlags;
zooTangentWksUtils;
zooUtils;


global proc zooGetStrides( string $obj, string $optionStr, float $strideStarts[], float $strideEnds[] ) {
	string $temp[] = {};
	float $tolerance = 0.01;
	int $start = `playbackOptions -q -min`;
	int $end = `playbackOptions -q -max`;

	$temp = `zooGetFlagArguments $optionStr tol`; if( `size $temp` ) $tolerance = $temp[0];
	$temp = `zooGetFlagArguments $optionStr start`; if( `size $temp` ) $start = $temp[0];
	$temp = `zooGetFlagArguments $optionStr end`; if( `size $temp` ) $end = $temp[0];

	clear $strideStarts;
	clear $strideEnds;
	float $st_tim[] = {};
	float $st_val[] = {};
	int $st_idx[] = {};

	zooGetOuterStaticKeys $obj ty $start $end $st_tim $st_val $st_idx;

	//figure out which of the outer static keys have the lowest values - these are our strides
	float $orderedVal[] = `sort $st_val`;
	float $low = $orderedVal[0];

	for( $n=0; $n<`size $st_val`; $n++ ) {
		float $curVal = $st_val[$n];
		if( `zooEqTol $curVal $low 0.01` ) {
			//so this key is a stride - now figure out if the key is at the start or end of a stride
			//if the key falls at the end of the range given, wrap back to the start
			int $isStart = $st_tim[$n] == $start;
			int $isEnd = $st_tim[$n] == $end;
			int $nextKeyIdx = $isEnd? $st_idx[0]+1: $st_idx[$n]+1;
			float $nextKeyVal = zooGetElement_float(0,`keyframe -in $nextKeyIdx -q -vc ( $obj +".ty" )`);

			if( $nextKeyVal > $curVal+$tolerance ) $strideStarts[`size $strideStarts`] = $st_tim[$n];
			else if( !$isEnd && !$isStart ) $strideEnds[`size $strideEnds`] = $st_tim[$n];
			}
		}

	print "-----------STARTS-----------\n";
	print $strideStarts;
	print "-----------ENDS-----------\n";
	print $strideEnds;
	}
